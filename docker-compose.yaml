version: '3'

services:

  postgres:
    image: postgres:15.2
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    networks:
      - local-keycloak
    volumes:
      - keycloak-data:/var/lib/postgresql/data

  keycloak:
    depends_on:
      - postgres
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    ports:
      - "28080:8080"
    restart: unless-stopped
    networks:
      - local-keycloak

  turkeymysql:
    image: mysql/mysql-server:8.0.32
    container_name: turkeymysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '4407:3306'
    #expose:
      #- '4407'

volumes:
  keycloak-data:
    external: false
  mysql-data:
    external: false

networks:
  local-keycloak:

